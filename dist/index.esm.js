const presets=Object.freeze({alphanumeric:"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",alphabetic:"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",numeric:"0123456789",base58:"abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ123456789",base56:"abcdefghijkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ23456789",base32:"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",base16:"ABCDEF0123456789"}),defaults=Object.freeze({length:5,alphabet:presets.base58}),validate=(t,e)=>t(e),targetValidator=t=>{if(!t)throw new Error("Missing required parameter: target");if(!~t.indexOf("localhost")&&!new RegExp("^(?:(?:https?|s?ftp)://)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))\\.?)(?::\\d{2,5})?(?:[/?#]\\S*)?$","i").test(t))throw new Error(`Invalid value for parameter target: ${t}`)},urlValidator=t=>{if(!t)throw new Error("Missing required parameter: url");if(!new RegExp("^(?:(?:https?|s?ftp)://)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))\\.?)(?::\\d{2,5})?(?:[/?#]\\S*)?$","i").test(t))throw new Error(`Invalid value for parameter url: ${t}`)},lengthValidator=t=>{if(!t)throw new Error("Missing required parameter: length");if(!Number.isInteger(t)||t<=0)throw new Error(`Invalid value for parameter length: ${t}`)},alphabetValidator=t=>{if(!t)throw new Error("Missing required parameter: alphabet");const e=t.match(new RegExp("[\\W_]"));if(e)throw new Error(`Illegal character found in alphabet: ${t.charAt(e.index)}`);const a=t.match(new RegExp("(.+)(?=.*?\\1)","g"));if(a)throw new Error(`Duplicate character found in alphabet: ${a[0]}`)},format=(t,...e)=>t(...e),trimSlashesFormatter=t=>{if(t&&"string"==typeof t)return t.replace(/^(\/)*|(\/)*$/g,"")},targetFormatter=(t,e)=>{return~t.indexOf("{id}")?t.replace("{id}",e):`${t}/${e}`},getRandomInt=(t,e)=>Math.floor(Math.random()*(e-t))+t,getRandomChar=t=>t[getRandomInt(0,t.length)],getRandomChars=(t,e)=>[...Array(t)].map(()=>getRandomChar(e)).join("");class Shortener{constructor({target:t,length:e=defaults.length,alphabet:a=defaults.alphabet}={}){this.setConfiguration({target:t,length:e,alphabet:a})}get target(){return this._target}set target(t){validate(targetValidator,t),this._target=t}get length(){return this._length}set length(t){validate(lengthValidator,t),this._length=t}get alphabet(){return this._alphabet}set alphabet(t){presets[t]&&(t=presets[t]),validate(alphabetValidator,t),this._alphabet=t}setConfiguration({target:t,length:e=defaults.length,alphabet:a=defaults.alphabet}={}){Object.assign(this,{target:t,length:e,alphabet:a})}getInfo(){const t={target:this.target,length:this.length,alphabet:this.alphabet},e=Math.pow(this.alphabet.length,this.length);return{config:t,collisionInfo:{possibilities:e,probability:1/e}}}shorten(t){validate(urlValidator,t);const e=getRandomChars(this.length,this.alphabet);return{id:e,original:t,target:format(targetFormatter,format(trimSlashesFormatter,this.target),e)}}}export default Shortener;
